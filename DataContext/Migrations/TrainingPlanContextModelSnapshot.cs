// <auto-generated />
using System;
using DataContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataContext.Migrations
{
    [DbContext(typeof(TrainingPlanContext))]
    partial class TrainingPlanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("DataContext.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("DataContext.Models.ExerciseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ExerciseCategory");
                });

            modelBuilder.Entity("DataContext.Models.TrainingSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TrainingSchedules");
                });

            modelBuilder.Entity("DataContext.Models.TrainingScheduleExercise", b =>
                {
                    b.Property<int>("ExerciseId");

                    b.Property<int>("TrainingScheduleId");

                    b.Property<string>("Sets")
                        .IsRequired();

                    b.HasKey("ExerciseId", "TrainingScheduleId");

                    b.HasIndex("TrainingScheduleId");

                    b.ToTable("TrainingScheduleExercise");
                });

            modelBuilder.Entity("DataContext.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataContext.Models.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("DataContext.Models.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId");

                    b.Property<int>("ExerciseId");

                    b.Property<DateTime>("DateTime");

                    b.Property<string>("Sets")
                        .IsRequired();

                    b.HasKey("WorkoutId", "ExerciseId", "DateTime");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercise");
                });

            modelBuilder.Entity("DataContext.Models.Workshop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Workshops");
                });

            modelBuilder.Entity("DataContext.Models.WorkshopExercise", b =>
                {
                    b.Property<int>("WorkshopId");

                    b.Property<int>("ExerciseId");

                    b.HasKey("WorkshopId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkshopExercise");
                });

            modelBuilder.Entity("DataContext.Models.Exercise", b =>
                {
                    b.HasOne("DataContext.Models.ExerciseCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataContext.Models.TrainingSchedule", b =>
                {
                    b.HasOne("DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataContext.Models.TrainingScheduleExercise", b =>
                {
                    b.HasOne("DataContext.Models.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataContext.Models.TrainingSchedule", "TrainingSchedule")
                        .WithMany("TrainingScheduleExercises")
                        .HasForeignKey("TrainingScheduleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataContext.Models.Workout", b =>
                {
                    b.HasOne("DataContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataContext.Models.WorkoutExercise", b =>
                {
                    b.HasOne("DataContext.Models.Exercise", "Exercise")
                        .WithMany("Workouts")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataContext.Models.Workout", "Workout")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataContext.Models.WorkshopExercise", b =>
                {
                    b.HasOne("DataContext.Models.Exercise", "Exercise")
                        .WithMany("Workshops")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataContext.Models.Workshop", "Workshop")
                        .WithMany("Exercises")
                        .HasForeignKey("WorkshopId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
